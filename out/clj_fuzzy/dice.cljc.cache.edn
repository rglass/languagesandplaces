{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name clj-fuzzy.dice, :imports nil, :requires {clojure.string clojure.string, clojure.set clojure.set, clj-fuzzy.helpers clj-fuzzy.helpers}, :uses {bigrams clj-fuzzy.helpers}, :defs {letter-pairs {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/dice.cljc", :line 17, :column 8, :end-line 17, :end-column 20, :private true, :arglists (quote ([string]))}, :private true, :name clj-fuzzy.dice/letter-pairs, :variadic false, :file "out/clj_fuzzy/dice.cljc", :end-column 20, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string]))}, coefficient {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/dice.cljc", :line 23, :column 7, :end-line 23, :end-column 18, :arglists (quote ([string1 string2])), :doc "Compute the Dice coefficient between two [strings]."}, :name clj-fuzzy.dice/coefficient, :variadic false, :file "out/clj_fuzzy/dice.cljc", :end-column 18, :method-params ([string1 string2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([string1 string2])), :doc "Compute the Dice coefficient between two [strings]."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}