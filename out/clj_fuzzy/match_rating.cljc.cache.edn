{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name clj-fuzzy.match-rating, :imports nil, :requires {clojure.string clojure.string, clj-fuzzy.helpers clj-fuzzy.helpers}, :uses {eat clj-fuzzy.helpers, distinct-consecutive clj-fuzzy.helpers, clean-non-alphabetical clj-fuzzy.helpers}, :defs {codex-comparison {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 60, :column 8, :end-line 60, :end-column 24, :private true, :arglists (quote ([aggregate]))}, :private true, :name clj-fuzzy.match-rating/codex-comparison, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 24, :method-params ([aggregate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([aggregate]))}, similarity-rating {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 66, :column 8, :end-line 66, :end-column 25, :private true, :arglists (quote ([codex-1 codex-2]))}, :private true, :name clj-fuzzy.match-rating/similarity-rating, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 25, :method-params ([codex-1 codex-2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([codex-1 codex-2]))}, prep-word {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 24, :column 8, :end-line 24, :end-column 17, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.match-rating/prep-word, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 17, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, make-aggregate {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 49, :column 8, :end-line 49, :end-column 22, :private true, :arglists (quote ([longest shortest]))}, :private true, :name clj-fuzzy.match-rating/make-aggregate, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 22, :method-params ([longest shortest]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([longest shortest]))}, get-codex-letters {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 30, :column 8, :end-line 30, :end-column 25, :private true, :arglists (quote ([pword]))}, :private true, :name clj-fuzzy.match-rating/get-codex-letters, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 25, :method-params ([pword]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pword]))}, compute-longest {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 42, :column 8, :end-line 42, :end-column 23, :private true, :arglists (quote ([codex-1 codex-2]))}, :private true, :name clj-fuzzy.match-rating/compute-longest, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 23, :method-params ([codex-1 codex-2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([codex-1 codex-2]))}, minimum-rating {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 35, :column 8, :end-line 35, :end-column 22, :private true, :arglists (quote ([codex-1 codex-2]))}, :private true, :name clj-fuzzy.match-rating/minimum-rating, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 22, :method-params ([codex-1 codex-2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([codex-1 codex-2]))}, mra-codex {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 75, :column 7, :end-line 75, :end-column 16, :arglists (quote ([word])), :doc "Compute the MRA codex for a [word]."}, :name clj-fuzzy.match-rating/mra-codex, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 16, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word])), :doc "Compute the MRA codex for a [word]."}, unmatched-characters {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 63, :column 8, :end-line 63, :end-column 28, :private true, :arglists (quote ([similarity-sequence]))}, :private true, :name clj-fuzzy.match-rating/unmatched-characters, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 28, :method-params ([similarity-sequence]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([similarity-sequence]))}, reverse-aggregate {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 55, :column 8, :end-line 55, :end-column 25, :private true, :arglists (quote ([aggregate]))}, :private true, :name clj-fuzzy.match-rating/reverse-aggregate, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 25, :method-params ([aggregate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([aggregate]))}, mra-comparison {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 83, :column 7, :end-line 83, :end-column 21, :arglists (quote ([word-1 word-2])), :doc "Compare two [words] using the Match Rating Approach"}, :name clj-fuzzy.match-rating/mra-comparison, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 21, :method-params ([word-1 word-2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 2, :fn-var true, :arglists (quote ([word-1 word-2])), :doc "Compare two [words] using the Match Rating Approach"}, drop-non-leading-vowel {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 19, :column 8, :end-line 19, :end-column 30, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.match-rating/drop-non-leading-vowel, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 30, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, drop-nil {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/match_rating.cljc", :line 28, :column 7, :end-line 28, :end-column 15, :arglists (quote ([sequence]))}, :name clj-fuzzy.match-rating/drop-nil, :variadic false, :file "out/clj_fuzzy/match_rating.cljc", :end-column 15, :method-params ([sequence]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sequence]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:codex :else :similarity :minimum :match}, :order [:else :minimum :similarity :codex :match]}, :doc nil}