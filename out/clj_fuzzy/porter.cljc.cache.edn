{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name clj-fuzzy.porter, :imports nil, :requires {clojure.string clojure.string, clj-fuzzy.helpers clj-fuzzy.helpers}, :uses {chop clj-fuzzy.helpers, re-test? clj-fuzzy.helpers}, :defs {mgr0? {:name clj-fuzzy.porter/mgr0?, :file "out/clj_fuzzy/porter.cljc", :line 71, :column 1, :end-line 71, :end-column 21, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 71, :column 16, :end-line 71, :end-column 21, :private true}}, step-4-suffixes {:name clj-fuzzy.porter/step-4-suffixes, :file "out/clj_fuzzy/porter.cljc", :line 28, :column 1, :end-line 28, :end-column 31, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 28, :column 16, :end-line 28, :end-column 31, :private true}}, step-4a {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 153, :column 8, :end-line 153, :end-column 15, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-4a, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 15, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, $match {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 91, :column 7, :end-line 91, :end-column 13, :arglists (quote ([regex word]))}, :name clj-fuzzy.porter/$match, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 13, :method-params ([regex word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([regex word]))}, step-0 {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 100, :column 8, :end-line 100, :end-column 14, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-0, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 14, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, step-1b-1 {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 113, :column 8, :end-line 113, :end-column 17, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-1b-1, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 17, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, step-2-map {:name clj-fuzzy.porter/step-2-map, :file "out/clj_fuzzy/porter.cljc", :line 33, :column 1, :end-line 33, :end-column 26, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 33, :column 16, :end-line 33, :end-column 26, :private true}}, step-1b {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 128, :column 8, :end-line 128, :end-column 15, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-1b, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 15, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, step-2 {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 147, :column 8, :end-line 147, :end-column 14, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-2, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 14, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, step-3-map {:name clj-fuzzy.porter/step-3-map, :file "out/clj_fuzzy/porter.cljc", :line 52, :column 1, :end-line 52, :end-column 26, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 52, :column 16, :end-line 52, :end-column 26, :private true}}, step-5a {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 166, :column 8, :end-line 166, :end-column 15, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-5a, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 15, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, meq1? {:name clj-fuzzy.porter/meq1?, :file "out/clj_fuzzy/porter.cljc", :line 73, :column 1, :end-line 73, :end-column 21, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 73, :column 16, :end-line 73, :end-column 21, :private true}}, step-1b-2 {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 118, :column 8, :end-line 118, :end-column 17, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-1b-2, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 17, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, steps? {:name clj-fuzzy.porter/steps?, :file "out/clj_fuzzy/porter.cljc", :line 79, :column 1, :end-line 79, :end-column 22, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 79, :column 16, :end-line 79, :end-column 22, :private true}}, v {:name clj-fuzzy.porter/v, :file "out/clj_fuzzy/porter.cljc", :line 64, :column 1, :end-line 64, :end-column 17, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 64, :column 16, :end-line 64, :end-column 17, :private true}}, step-2-suffixes {:name clj-fuzzy.porter/step-2-suffixes, :file "out/clj_fuzzy/porter.cljc", :line 19, :column 1, :end-line 19, :end-column 31, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 19, :column 16, :end-line 19, :end-column 31, :private true}}, vv {:name clj-fuzzy.porter/vv, :file "out/clj_fuzzy/porter.cljc", :line 66, :column 1, :end-line 66, :end-column 18, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 66, :column 16, :end-line 66, :end-column 18, :private true}}, mgr1? {:name clj-fuzzy.porter/mgr1?, :file "out/clj_fuzzy/porter.cljc", :line 75, :column 1, :end-line 75, :end-column 21, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 75, :column 16, :end-line 75, :end-column 21, :private true}}, remove-last-of {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 85, :column 8, :end-line 85, :end-column 22, :private true, :arglists (quote ([string kind]))}, :private true, :name clj-fuzzy.porter/remove-last-of, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 22, :method-params ([string kind]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([string kind]))}, make-suffixes {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 16, :column 8, :end-line 16, :end-column 21, :private true, :arglists (quote ([& strings])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(strings)], :arglists ([& strings]), :arglists-meta (nil)}}, :private true, :name clj-fuzzy.porter/make-suffixes, :variadic true, :file "out/clj_fuzzy/porter.cljc", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(strings)], :arglists ([& strings]), :arglists-meta (nil)}, :method-params [(strings)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists ([& strings])}, step-3 {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 150, :column 8, :end-line 150, :end-column 14, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-3, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 14, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, vowel-in-stem? {:name clj-fuzzy.porter/vowel-in-stem?, :file "out/clj_fuzzy/porter.cljc", :line 77, :column 1, :end-line 77, :end-column 30, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 77, :column 16, :end-line 77, :end-column 30, :private true}}, cc {:name clj-fuzzy.porter/cc, :file "out/clj_fuzzy/porter.cljc", :line 65, :column 1, :end-line 65, :end-column 18, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 65, :column 16, :end-line 65, :end-column 18, :private true}}, step-1a {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 105, :column 8, :end-line 105, :end-column 15, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-1a, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 15, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, step-23-procedure {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 141, :column 8, :end-line 141, :end-column 25, :private true, :arglists (quote ([word regex step-map]))}, :private true, :name clj-fuzzy.porter/step-23-procedure, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 25, :method-params ([word regex step-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 3, :fn-var true, :arglists (quote ([word regex step-map]))}, c {:name clj-fuzzy.porter/c, :file "out/clj_fuzzy/porter.cljc", :line 63, :column 1, :end-line 63, :end-column 17, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 63, :column 16, :end-line 63, :end-column 17, :private true}}, step-1c {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 134, :column 8, :end-line 134, :end-column 15, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-1c, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 15, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, re-test-fn {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 68, :column 8, :end-line 68, :end-column 18, :private true, :arglists (quote ([pattern-string]))}, :private true, :name clj-fuzzy.porter/re-test-fn, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 18, :method-params ([pattern-string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pattern-string]))}, step-5b {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 176, :column 8, :end-line 176, :end-column 15, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-5b, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 15, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, step-3-suffixes {:name clj-fuzzy.porter/step-3-suffixes, :file "out/clj_fuzzy/porter.cljc", :line 25, :column 1, :end-line 25, :end-column 31, :private true, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 25, :column 16, :end-line 25, :end-column 31, :private true}}, stem {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 189, :column 7, :end-line 189, :end-column 11, :arglists (quote ([word]))}, :name clj-fuzzy.porter/stem, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 11, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, step-4 {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 160, :column 8, :end-line 160, :end-column 14, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-4, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 14, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}, step-5c {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/clj_fuzzy/porter.cljc", :line 181, :column 8, :end-line 181, :end-column 15, :private true, :arglists (quote ([word]))}, :private true, :name clj-fuzzy.porter/step-5c, :variadic false, :file "out/clj_fuzzy/porter.cljc", :end-column 15, :method-params ([word]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([word]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}