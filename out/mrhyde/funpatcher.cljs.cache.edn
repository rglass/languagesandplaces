{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name mrhyde.funpatcher, :imports nil, :requires {mrhyde.mrhyde mrhyde.mrhyde, mrhyde.typepatcher mrhyde.typepatcher, mrhyde.guts mrhyde.guts}, :uses {restore-original-js-fn mrhyde.guts, hyde-array? mrhyde.mrhyde, get-store-cur-js-fn mrhyde.guts, hyde-proto-object-marker mrhyde.guts, hyde-proto-array-marker mrhyde.guts, recurse-from-hyde-cache mrhyde.typepatcher, IHyde mrhyde.mrhyde}, :defs {patch-tostring-sequential-isarray {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 99, :column 7, :end-line 99, :end-column 40, :arglists (quote ([o field-name]))}, :name mrhyde.funpatcher/patch-tostring-sequential-isarray, :variadic false, :file "out/mrhyde/funpatcher.cljs", :end-column 40, :method-params ([o field-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o field-name]))}, patch-return-value-recurse-from-cache-as-function {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 21, :column 7, :end-line 21, :end-column 56, :arglists (quote ([o field-name]))}, :name mrhyde.funpatcher/patch-return-value-recurse-from-cache-as-function, :variadic false, :file "out/mrhyde/funpatcher.cljs", :end-column 56, :method-params ([o field-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o field-name]))}, patch-return-value-to-clj {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 9, :column 7, :end-line 9, :end-column 32, :arglists (quote ([o field-name]))}, :name mrhyde.funpatcher/patch-return-value-to-clj, :variadic false, :file "out/mrhyde/funpatcher.cljs", :end-column 32, :method-params ([o field-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o field-name]))}, recurse-from-hyde-cache-maybe-fn {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 29, :column 7, :end-line 29, :end-column 39, :arglists (quote ([x]))}, :name mrhyde.funpatcher/recurse-from-hyde-cache-maybe-fn, :variadic false, :file "out/mrhyde/funpatcher.cljs", :end-column 39, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, patch-return-value-recurse-from-cache {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 15, :column 7, :end-line 15, :end-column 44, :arglists (quote ([o field-name]))}, :name mrhyde.funpatcher/patch-return-value-recurse-from-cache, :variadic false, :file "out/mrhyde/funpatcher.cljs", :end-column 44, :method-params ([o field-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([o field-name]))}, patch-args-recurse-from-cache {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 38, :column 7, :end-line 38, :end-column 36, :arglists (quote ([o field-name & fields])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(o field-name fields)], :arglists ([o field-name & fields]), :arglists-meta (nil)}}, :name mrhyde.funpatcher/patch-args-recurse-from-cache, :variadic true, :file "out/mrhyde/funpatcher.cljs", :end-column 36, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(o field-name fields)], :arglists ([o field-name & fields]), :arglists-meta (nil)}, :method-params [(o field-name fields)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists ([o field-name & fields])}, patch-args-clj-to-js {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 87, :column 7, :end-line 87, :end-column 27, :arglists (quote ([o field-name & fields])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(o field-name fields)], :arglists ([o field-name & fields]), :arglists-meta (nil)}}, :name mrhyde.funpatcher/patch-args-clj-to-js, :variadic true, :file "out/mrhyde/funpatcher.cljs", :end-column 27, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(o field-name fields)], :arglists ([o field-name & fields]), :arglists-meta (nil)}, :method-params [(o field-name fields)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists ([o field-name & fields])}, patch-tostring-hydearray-is-array {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 110, :column 7, :end-line 110, :end-column 40, :arglists (quote ([]))}, :name mrhyde.funpatcher/patch-tostring-hydearray-is-array, :variadic false, :file "out/mrhyde/funpatcher.cljs", :end-column 40, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, patch-args-seq-to-array {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 75, :column 7, :end-line 75, :end-column 30, :arglists (quote ([o field-name & fields])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(o field-name fields)], :arglists ([o field-name & fields]), :arglists-meta (nil)}}, :name mrhyde.funpatcher/patch-args-seq-to-array, :variadic true, :file "out/mrhyde/funpatcher.cljs", :end-column 30, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(o field-name fields)], :arglists ([o field-name & fields]), :arglists-meta (nil)}, :method-params [(o field-name fields)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists ([o field-name & fields])}, patch-args-keyword-to-fn {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 49, :column 7, :end-line 49, :end-column 31, :arglists (quote ([o field-name & fields])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(o field-name fields)], :arglists ([o field-name & fields]), :arglists-meta (nil)}}, :name mrhyde.funpatcher/patch-args-keyword-to-fn, :variadic true, :file "out/mrhyde/funpatcher.cljs", :end-column 31, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(o field-name fields)], :arglists ([o field-name & fields]), :arglists-meta (nil)}, :method-params [(o field-name fields)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists ([o field-name & fields])}, patch-args-map-to-obj {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/funpatcher.cljs", :line 62, :column 7, :end-line 62, :end-column 28, :arglists (quote ([o field-name & fields])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(o field-name fields)], :arglists ([o field-name & fields]), :arglists-meta (nil)}}, :name mrhyde.funpatcher/patch-args-map-to-obj, :variadic true, :file "out/mrhyde/funpatcher.cljs", :end-column 28, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(o field-name fields)], :arglists ([o field-name & fields]), :arglists-meta (nil)}, :method-params [(o field-name fields)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists ([o field-name & fields])}}, :require-macros nil, :doc nil}