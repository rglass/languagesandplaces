{:rename-macros {}, :renames {}, :use-macros {difference clojure.set}, :excludes #{}, :name mrhyde.typepatcher, :imports nil, :requires {mrhyde.mrhyde mrhyde.mrhyde, mrhyde.guts mrhyde.guts, clojure.set clojure.set}, :uses {restore-original-js-fn mrhyde.guts, from-cache mrhyde.mrhyde, hyde-array? mrhyde.mrhyde, get-store-cur-js-fn mrhyde.guts, hyde-proto-object-marker mrhyde.guts, hyde-proto-array-marker mrhyde.guts, hyde-object? mrhyde.mrhyde, has-cache? mrhyde.mrhyde, hyde? mrhyde.mrhyde, difference clojure.set, IHyde mrhyde.mrhyde}, :defs {hyde-keyset-key {:name mrhyde.typepatcher/hyde-keyset-key, :file "out/mrhyde/typepatcher.cljs", :line 66, :column 1, :end-line 66, :end-column 21, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 66, :column 6, :end-line 66, :end-column 21}}, patch-core-seq-type {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 274, :column 7, :end-line 274, :end-column 26, :arglists (quote ([s]))}, :name mrhyde.typepatcher/patch-core-seq-type, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 26, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, strkey {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 204, :column 8, :end-line 204, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name mrhyde.typepatcher/strkey, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, gen-map-setter {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 214, :column 7, :end-line 214, :end-column 21, :arglists (quote ([k]))}, :name mrhyde.typepatcher/gen-map-setter, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 21, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, hyde-parition-key {:name mrhyde.typepatcher/hyde-parition-key, :file "out/mrhyde/typepatcher.cljs", :line 68, :column 1, :end-line 68, :end-column 23, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 68, :column 6, :end-line 68, :end-column 23}}, hyde-array-shift {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 93, :column 7, :end-line 93, :end-column 23, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-shift, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, hyde-access-key {:name mrhyde.typepatcher/hyde-access-key, :file "out/mrhyde/typepatcher.cljs", :line 64, :column 1, :end-line 64, :end-column 21, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 64, :column 6, :end-line 64, :end-column 21}}, install-js-get-prop {:name mrhyde.typepatcher/install-js-get-prop, :file "out/mrhyde/typepatcher.cljs", :line 13, :column 1, :end-line 13, :end-column 25, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 13, :column 6, :end-line 13, :end-column 25}}, have-patched-js-with-key-lookup {:name mrhyde.typepatcher/have-patched-js-with-key-lookup, :file "out/mrhyde/typepatcher.cljs", :line 243, :column 1, :end-line 243, :end-column 37, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 243, :column 6, :end-line 243, :end-column 37}}, install-js-getset-prop {:name mrhyde.typepatcher/install-js-getset-prop, :file "out/mrhyde/typepatcher.cljs", :line 39, :column 1, :end-line 39, :end-column 28, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 39, :column 6, :end-line 39, :end-column 28}}, hyde-array-filter {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 172, :column 7, :end-line 172, :end-column 24, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-filter, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, hyde-keylist-key {:name mrhyde.typepatcher/hyde-keylist-key, :file "out/mrhyde/typepatcher.cljs", :line 65, :column 1, :end-line 65, :end-column 22, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 65, :column 6, :end-line 65, :end-column 22}}, hyde-array-vector-slice {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 146, :column 7, :end-line 146, :end-column 30, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-vector-slice, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 30, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, hyde-array-reduce-right {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 200, :column 7, :end-line 200, :end-column 30, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-reduce-right, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 30, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, patch-map-object {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 268, :column 7, :end-line 268, :end-column 23, :arglists (quote ([o]))}, :name mrhyde.typepatcher/patch-map-object, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 23, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, set-partition-key {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 543, :column 7, :end-line 543, :end-column 24, :arglists (quote ([k]))}, :name mrhyde.typepatcher/set-partition-key, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 24, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 543, :end-line 543, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, patch-core-map-type {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 293, :column 7, :end-line 293, :end-column 26, :arglists (quote ([s]))}, :name mrhyde.typepatcher/patch-core-map-type, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 26, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 293, :end-line 293, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, cljs-partition-key {:name mrhyde.typepatcher/cljs-partition-key, :file "out/mrhyde/typepatcher.cljs", :line 67, :column 1, :end-line 67, :end-column 24, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 67, :column 6, :end-line 67, :end-column 24}}, hyde-array-for-each {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 193, :column 7, :end-line 193, :end-column 26, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-for-each, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, gen-map-getter {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 209, :column 7, :end-line 209, :end-column 21, :arglists (quote ([k]))}, :name mrhyde.typepatcher/gen-map-getter, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 21, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, filtered-keylist-set {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 388, :column 7, :end-line 388, :end-column 27, :arglists (quote ([l]))}, :name mrhyde.typepatcher/filtered-keylist-set, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 27, :method-params ([l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 388, :end-line 388, :max-fixed-arity 1, :fn-var true, :arglists (quote ([l]))}, hide-js-props {:name mrhyde.typepatcher/hide-js-props, :file "out/mrhyde/typepatcher.cljs", :line 31, :column 1, :end-line 31, :end-column 19, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 31, :column 6, :end-line 31, :end-column 19}}, lazy-init-hyde-setset {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 391, :column 7, :end-line 391, :end-column 28, :arglists (quote ([m]))}, :name mrhyde.typepatcher/lazy-init-hyde-setset, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 28, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 391, :end-line 391, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, hyde-cache-key {:name mrhyde.typepatcher/hyde-cache-key, :file "out/mrhyde/typepatcher.cljs", :line 63, :column 1, :end-line 63, :end-column 20, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 63, :column 6, :end-line 63, :end-column 20}}, patch-seq-object {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 261, :column 7, :end-line 261, :end-column 23, :arglists (quote ([o]))}, :name mrhyde.typepatcher/patch-seq-object, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 23, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o]))}, hyde-array-unshift {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 112, :column 7, :end-line 112, :end-column 25, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-unshift, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, patch-map-type {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 486, :column 7, :end-line 486, :end-column 21, :arglists (quote ([[t s]]))}, :name mrhyde.typepatcher/patch-map-type, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 21, :method-params ([p__26505]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 486, :end-line 486, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[t s]]))}, aset-hidden {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 59, :column 7, :end-line 59, :end-column 18, :arglists (quote ([o nam p]))}, :name mrhyde.typepatcher/aset-hidden, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 18, :method-params ([o nam p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 3, :fn-var true, :arglists (quote ([o nam p]))}, have-patched-mappish-flag {:name mrhyde.typepatcher/have-patched-mappish-flag, :file "out/mrhyde/typepatcher.cljs", :line 470, :column 1, :end-line 470, :end-column 31, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 470, :column 6, :end-line 470, :end-column 31}}, patch-map {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 228, :column 7, :end-line 228, :end-column 16, :arglists (quote ([m]))}, :name mrhyde.typepatcher/patch-map, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 16, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, hyde-array-slice {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 138, :column 7, :end-line 138, :end-column 23, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-slice, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, hyde-array-reverse {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 84, :column 7, :end-line 84, :end-column 25, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-reverse, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, gen-seq-getter {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 312, :column 7, :end-line 312, :end-column 21, :arglists (quote ([n]))}, :name mrhyde.typepatcher/gen-seq-getter, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 21, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 312, :end-line 312, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, install-js-hidden-getset-prop {:name mrhyde.typepatcher/install-js-hidden-getset-prop, :file "out/mrhyde/typepatcher.cljs", :line 49, :column 1, :end-line 49, :end-column 35, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 49, :column 6, :end-line 49, :end-column 35}}, patch-vector-type {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 479, :column 7, :end-line 479, :end-column 24, :arglists (quote ([t]))}, :name mrhyde.typepatcher/patch-vector-type, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 24, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 479, :end-line 479, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, hyde-array-splice {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 109, :column 7, :end-line 109, :end-column 24, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-splice, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, hyde-array-ensure-cached {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 70, :column 7, :end-line 70, :end-column 31, :arglists (quote ([h]))}, :name mrhyde.typepatcher/hyde-array-ensure-cached, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 31, :method-params ([h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([h]))}, add-hyde-protocol-to-map {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 396, :column 7, :end-line 396, :end-column 31, :arglists (quote ([m]))}, :name mrhyde.typepatcher/add-hyde-protocol-to-map, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 31, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 396, :end-line 396, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, hyde-array-reduce {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 197, :column 7, :end-line 197, :end-column 24, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-reduce, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, hyde-array-sort {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 100, :column 7, :end-line 100, :end-column 22, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-sort, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, patch-known-vector-types {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 506, :column 7, :end-line 506, :end-column 31, :arglists (quote ([]))}, :name mrhyde.typepatcher/patch-known-vector-types, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 506, :end-line 506, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, hyde-array-push {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 81, :column 7, :end-line 81, :end-column 22, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-push, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, hyde-array-join {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 120, :column 7, :end-line 120, :end-column 22, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-join, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, get-partition-key {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 539, :column 7, :end-line 539, :end-column 24, :arglists (quote ([]))}, :name mrhyde.typepatcher/get-partition-key, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 539, :end-line 539, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, patch-prototype-as-array {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 328, :column 7, :end-line 328, :end-column 31, :arglists (quote ([p o is-vect]))}, :name mrhyde.typepatcher/patch-prototype-as-array, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 31, :method-params ([p o is-vect]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 328, :end-line 328, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p o is-vect]))}, hyde-array-pop {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 78, :column 7, :end-line 78, :end-column 21, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-pop, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, recurse-from-hyde-cache {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 433, :column 7, :end-line 433, :end-column 30, :arglists (quote ([xo & opts])), :doc "Recursively transforms any cached hyde objects to new persistent versions.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(xo opts)], :arglists ([xo & opts]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/recurse-from-hyde-cache, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 30, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(xo opts)], :arglists ([xo & opts]), :arglists-meta (nil)}, :method-params [(xo opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 433, :end-line 433, :max-fixed-arity 1, :fn-var true, :arglists ([xo & opts]), :doc "Recursively transforms any cached hyde objects to new persistent versions."}, patch-obj-spy-on-partition {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 558, :column 7, :end-line 558, :end-column 33, :arglists (quote ([]))}, :name mrhyde.typepatcher/patch-obj-spy-on-partition, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 558, :end-line 558, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, from-cache-if-has-cache {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 428, :column 7, :end-line 428, :end-column 30, :arglists (quote ([x]))}, :name mrhyde.typepatcher/from-cache-if-has-cache, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 30, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 428, :end-line 428, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, hyde-array-to-string {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 154, :column 7, :end-line 154, :end-column 27, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-to-string, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 27, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, MAXLEN {:name mrhyde.typepatcher/MAXLEN, :file "out/mrhyde/typepatcher.cljs", :line 259, :column 1, :end-line 259, :end-column 12, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 259, :column 6, :end-line 259, :end-column 12}}, gen-seq-setter {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 318, :column 7, :end-line 318, :end-column 21, :arglists (quote ([n]))}, :name mrhyde.typepatcher/gen-seq-setter, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 21, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, hyde-array-concat {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 132, :column 7, :end-line 132, :end-column 24, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-concat, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, install-js-hidden-get-prop {:name mrhyde.typepatcher/install-js-hidden-get-prop, :file "out/mrhyde/typepatcher.cljs", :line 22, :column 1, :end-line 22, :end-column 32, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 22, :column 6, :end-line 22, :end-column 32}}, hyde-array-to-source {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 151, :column 7, :end-line 151, :end-column 27, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-to-source, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 27, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, have-patched-arrayish-flag {:name mrhyde.typepatcher/have-patched-arrayish-flag, :file "out/mrhyde/typepatcher.cljs", :line 469, :column 1, :end-line 469, :end-column 32, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 469, :column 6, :end-line 469, :end-column 32}}, patch-known-sequential-types {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 495, :column 7, :end-line 495, :end-column 35, :arglists (quote ([]))}, :name mrhyde.typepatcher/patch-known-sequential-types, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 35, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 495, :end-line 495, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, patch-js-with-key-lookup {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 245, :column 7, :end-line 245, :end-column 31, :arglists (quote ([]))}, :name mrhyde.typepatcher/patch-js-with-key-lookup, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, repersist {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 460, :column 7, :end-line 460, :end-column 16, :arglists (quote ([x & opts])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(x opts)], :arglists ([x & opts]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/repersist, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(x opts)], :arglists ([x & opts]), :arglists-meta (nil)}, :method-params [(x opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 460, :end-line 460, :max-fixed-arity 1, :fn-var true, :arglists ([x & opts])}, dp {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 9, :column 7, :end-line 9, :end-column 9, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/dp, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, patch-known-mappish-types {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 528, :column 7, :end-line 528, :end-column 32, :arglists (quote ([]))}, :name mrhyde.typepatcher/patch-known-mappish-types, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 528, :end-line 528, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, hyde-array-some {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 168, :column 7, :end-line 168, :end-column 22, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-some, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, hyde-array-last-index-of {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 160, :column 7, :end-line 160, :end-column 31, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-last-index-of, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 31, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, patch-sequential-type {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 472, :column 7, :end-line 472, :end-column 28, :arglists (quote ([t]))}, :name mrhyde.typepatcher/patch-sequential-type, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 28, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 472, :end-line 472, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, add-hyde-protocol-to-seq {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 376, :column 7, :end-line 376, :end-column 31, :arglists (quote ([s]))}, :name mrhyde.typepatcher/add-hyde-protocol-to-seq, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 31, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 376, :end-line 376, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, patch-prototype-as-map {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 371, :column 7, :end-line 371, :end-column 29, :arglists (quote ([p o]))}, :name mrhyde.typepatcher/patch-prototype-as-map, :variadic false, :file "out/mrhyde/typepatcher.cljs", :end-column 29, :method-params ([p o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 371, :end-line 371, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p o]))}, hyde-array-every {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 165, :column 7, :end-line 165, :end-column 23, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-every, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, hyde-array-index-of {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 157, :column 7, :end-line 157, :end-column 26, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-index-of, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, hyde-array-map {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/mrhyde/typepatcher.cljs", :line 182, :column 7, :end-line 182, :end-column 21, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name mrhyde.typepatcher/hyde-array-map, :variadic true, :file "out/mrhyde/typepatcher.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :skip}, :order [:skip :else]}, :doc nil}