{:rename-macros {}, :renames {}, :use-macros {html hiccups.core, go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name places.core, :imports nil, :requires {metrics clj-fuzzy.metrics, clj-fuzzy.stemmers clj-fuzzy.stemmers, se-nat places.se.natmus, hiccups.runtime hiccups.runtime, clj-fuzzy.metrics clj-fuzzy.metrics, cljs.core.async cljs.core.async, util places.util, stemmers clj-fuzzy.stemmers, places.util places.util, dk-nat places.dk.natmus, places.dk.natmus places.dk.natmus, places.se.natmus places.se.natmus, hiccupsrt hiccups.runtime, strokes strokes}, :uses {d3 strokes, <! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {width {:name places.core/width, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 15, :column 1, :end-line 15, :end-column 11, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 15, :column 6, :end-line 15, :end-column 11}}, height {:name places.core/height, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 16, :column 1, :end-line 16, :end-column 12, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 16, :column 6, :end-line 16, :end-column 12}}, svg {:name places.core/svg, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 18, :column 1, :end-line 18, :end-column 9, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 18, :column 6, :end-line 18, :end-column 9}}, reduced-lev {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 23, :column 7, :end-line 23, :end-column 18, :arglists (quote ([xs y]))}, :name places.core/reduced-lev, :variadic false, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :end-column 18, :method-params ([xs y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xs y]))}, get-lev-text {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 28, :column 7, :end-line 28, :end-column 19, :arglists (quote ([xs y]))}, :name places.core/get-lev-text, :variadic false, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :end-column 19, :method-params ([xs y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xs y]))}, get-lev-number {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 31, :column 7, :end-line 31, :end-column 21, :arglists (quote ([xs y]))}, :name places.core/get-lev-number, :variadic false, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :end-column 21, :method-params ([xs y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xs y]))}, update-text {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 34, :column 7, :end-line 34, :end-column 18, :arglists (quote ([data]))}, :name places.core/update-text, :variadic false, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :end-column 18, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, make-se {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :line 73, :column 7, :end-line 73, :end-column 14, :arglists (quote ([]))}, :name places.core/make-se, :variadic false, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {hiccups hiccups.core, hiccups.core hiccups.core, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:y :transform :else :width :dy :recur :class :xlink:href :x :height}, :order [:width :height :transform :class :x :dy :recur :xlink:href :y :else]}, :doc nil}