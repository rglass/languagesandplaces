{:rename-macros {}, :renames {}, :use-macros {html hiccups.core, go cljs.core.async.macros}, :excludes #{}, :name places.dk.natmus, :imports nil, :requires {util places.util, places.util places.util, http cljs-http.client, cljs-http.client cljs-http.client, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {base-url {:name places.dk.natmus/base-url, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 9, :column 1, :end-line 9, :end-column 14, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 9, :column 6, :end-line 9, :end-column 14}}, default-collection {:name places.dk.natmus/default-collection, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 10, :column 1, :end-line 10, :end-column 24, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 10, :column 6, :end-line 10, :end-column 24}}, search-suffix {:name places.dk.natmus/search-suffix, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 11, :column 1, :end-line 11, :end-column 19, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 11, :column 6, :end-line 11, :end-column 19}}, id->image {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 13, :column 7, :end-line 13, :end-column 16, :arglists (quote ([id]))}, :name places.dk.natmus/id->image, :variadic false, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :end-column 16, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, extract-id {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 16, :column 7, :end-line 16, :end-column 17, :arglists (quote ([response]))}, :name places.dk.natmus/extract-id, :variadic false, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :end-column 17, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, query-id {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 19, :column 7, :end-line 19, :end-column 15, :arglists (quote ([i]))}, :name places.dk.natmus/query-id, :variadic false, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :end-column 15, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i]))}, id->tags {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 29, :column 7, :end-line 29, :end-column 15, :arglists (quote ([id]))}, :name places.dk.natmus/id->tags, :variadic false, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :end-column 15, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, extract-tags {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :line 37, :column 7, :end-line 37, :end-column 19, :arglists (quote ([response]))}, :name places.dk.natmus/extract-tags, :variadic false, :file "/Users/roman/Dropbox/Projects/ClojureScript/places/src/places/dk/natmus.cljs", :end-column 19, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}}, :require-macros {hiccups hiccups.core, hiccups.core hiccups.core, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:tags :_id :hits :size :with-credentials? :from :query-params :content-type :_source :body :media}, :order [:_id :hits :body :query-params :content-type :with-credentials? :size :from :media :tags :_source]}, :doc nil}