{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name strokes, :imports nil, :requires {mrhyde mrhyde.core, mrhyde.core mrhyde.core, mrhyde.funpatcher mrhyde.funpatcher, cljs.reader cljs.reader}, :uses {patch-return-value-to-clj mrhyde.funpatcher, patch-args-recurse-from-cache mrhyde.funpatcher, read-string cljs.reader, patch-tostring-hydearray-is-array mrhyde.funpatcher, patch-args-keyword-to-fn mrhyde.funpatcher, patch-args-map-to-obj mrhyde.funpatcher}, :defs {d3 {:name strokes/d3, :file "out/strokes.cljs", :line 11, :column 1, :end-line 11, :end-column 8, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 11, :column 6, :end-line 11, :end-column 8}}, category10 {:name strokes/category10, :file "out/strokes.cljs", :line 42, :column 3, :end-line 42, :end-column 18, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 42, :column 8, :end-line 42, :end-column 18}}, polygon {:name strokes/polygon, :file "out/strokes.cljs", :line 40, :column 3, :end-line 40, :end-column 15, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 40, :column 8, :end-line 40, :end-column 15}}, category20 {:name strokes/category20, :file "out/strokes.cljs", :line 43, :column 3, :end-line 43, :end-column 18, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 43, :column 8, :end-line 43, :end-column 18}}, voronoi {:name strokes/voronoi, :file "out/strokes.cljs", :line 41, :column 3, :end-line 41, :end-column 15, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 41, :column 8, :end-line 41, :end-column 15}}, timer {:name strokes/timer, :file "out/strokes.cljs", :line 38, :column 3, :end-line 38, :end-column 13, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 38, :column 8, :end-line 38, :end-column 13}}, arc {:name strokes/arc, :file "out/strokes.cljs", :line 39, :column 3, :end-line 39, :end-column 11, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 39, :column 8, :end-line 39, :end-column 11}}, bootstrap {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 19, :column 16, :end-line 19, :end-column 25, :export true, :arglists (quote ([& opts])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(opts)], :arglists ([& opts]), :arglists-meta (nil)}}, :name strokes/bootstrap, :variadic true, :file "out/strokes.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(opts)], :arglists ([& opts]), :arglists-meta (nil)}, :method-params [(opts)], :protocol-impl nil, :export true, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists ([& opts])}, category20c {:name strokes/category20c, :file "out/strokes.cljs", :line 45, :column 3, :end-line 45, :end-column 19, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 45, :column 8, :end-line 45, :end-column 19}}, category20b {:name strokes/category20b, :file "out/strokes.cljs", :line 44, :column 3, :end-line 44, :end-column 19, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 44, :column 8, :end-line 44, :end-column 19}}, fetch-edn {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([url callback]))}, :name strokes/fetch-edn, :variadic false, :file "out/strokes.cljs", :end-column 16, :method-params ([url callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url callback]))}, edn-parser-callback {:protocol-inline nil, :meta {:file "/Users/roman/Dropbox/Projects/ClojureScript/places/out/strokes.cljs", :line 13, :column 7, :end-line 13, :end-column 26, :arglists (quote ([request]))}, :name strokes/edn-parser-callback, :variadic false, :file "out/strokes.cljs", :end-column 26, :method-params ([request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([request]))}}, :require-macros nil, :doc nil}